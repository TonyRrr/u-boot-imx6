setenv bootargs ''

a_script=0x10800000
a_zImage=0x10800000
a_fdt=0x13000000
a_ramdisk=0x13800000
a_initrd=0x13a00000

setenv initrd_high 0xffffffff
if itest.s x6SX == "x${cpu}" || itest.s x7D == "x${cpu}"; then
	a_script=0x80800000
	a_zImage=0x80800000
	a_fdt=0x83000000
	a_ramdisk=0x83800000
	a_initrd=0x83a00000
fi

if itest.s "x" == "x${board}" ; then
	echo "!!!! Error: Your u-boot is outdated. Please upgrade.";
	exit;
fi

if itest.s "x" == "x${dtbname}" ; then
	if itest.s x6SOLO == "x${cpu}" ; then
		dtbname=imx6dl-${board}.dtb;
	elif itest.s x6DL == "x${cpu}" ; then
		dtbname=imx6dl-${board}.dtb;
	elif itest.s x6QP == "x${cpu}" ; then
		dtbname=imx6qp-${board}.dtb;
	elif itest.s x6SX == "x${cpu}" ; then
		dtbname=imx6sx-${board}.dtb;
	elif itest.s x7D == "x${cpu}" ; then
		dtbname=imx7d-${board}.dtb;
	else
		dtbname=imx6q-${board}.dtb;
	fi
fi

if load ${dtype} ${disk}:1 ${a_script} uEnv.txt ; then
    env import -t ${a_script} ${filesize}
fi

if itest.s x == x${bootdir} ; then
	bootdir=/boot/
fi

if load ${dtype} ${disk}:${bootpart} ${a_fdt} ${bootdir}${dtbname} ; then
	fdt addr ${a_fdt}
	setenv fdt_high 0xffffffff
else
	echo "!!!! Error loading ${bootdir}${dtbname}";
	exit;
fi

fdt resize
if itest.s "x" != "x${cmd_custom}" ; then
	run cmd_custom
fi

## HDMI ##
if itest.s "xoff" == "x$fb_hdmi" ; then
	setenv bootargs $bootargs video=HDMI-A-1:d
else
	if itest.s "x" != "x$force_edid" ; then
		echo "------ forcing EDID to /lib/firmware/$force_edid"
		setenv bootargs $bootargs drm_kms_helper.edid_firmware=$force_edid
	fi
fi

## LVDS ##
if itest.s "xoff" == "x$fb_lvds" ; then
	setenv bootargs $bootargs video=LVDS-1:d
elif itest.s "xhannstar7" == "x$fb_lvds" ; then
	fdt set /panel_lvds0 compatible "hannstar,hsd070pww1"
elif itest.s "xdt070btft" == "x$fb_lvds" ; then
	fdt set /panel_lvds0 compatible "innolux,zj070na-01p"
fi

if itest.s "xoff" == "x$fb_lvds2" ; then
	setenv bootargs $bootargs video=LVDS-2:d
elif itest.s "xhannstar7" == "x$fb_lvds2" ; then
	fdt set /panel_lvds1 compatible "hannstar,hsd070pww1"
elif itest.s "xdt070btft" == "x$fb_lvds2" ; then
	fdt set /panel_lvds1 compatible "innolux,zj070na-01p"
fi

## LCD ##
if itest.s "xoff" == "x$fb_lcd" ; then
	setenv bootargs $bootargs video=VGA-1:d
fi

if itest.s x${bootpart} == x ; then
	bootpart=1
fi

if itest.s "x" == "x${root}"; then
	if test "sata" = "${dtype}" || test "usb" = "${dtype}" ; then
		root=/dev/sda${bootpart}
	else
		root=/dev/mmcblk${disk}p${bootpart}
	fi
fi

if itest.s "x" == "x$cma" ; then
	cma=256M
fi

if itest.s "x" == "x$vmalloc" ; then
	vmalloc=400M
fi

if itest.s "x" != "x$show_fdt" ; then
	fdt print /
fi

if itest.s "x" != "x$show_env" ; then
	printenv
fi

setenv bootargs "$bootargs console=${console},115200 vmalloc=${vmalloc}"
setenv bootargs "$bootargs cma=${cma} consoleblank=0 root=${root} rootwait"

if load ${dtype} ${disk}:${bootpart} ${a_zImage} ${bootdir}zImage ; then
	bootz ${a_zImage} - ${a_fdt}
fi
echo "Error loading kernel image"
